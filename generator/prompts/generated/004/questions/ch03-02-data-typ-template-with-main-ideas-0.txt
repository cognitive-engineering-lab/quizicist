 Rust has four primary scalar types: integers, floating-point numbers, Booleans, and characters.
Question: Which of the following is a scalar type?
Correct answer: Integer
Incorrect answer: Tuple
Incorrect answer: Array
Incorrect answer: String

Idea: A tuple is a general way of grouping together a number of values with a variety of types into one compound type.
Question: What is a tuple?
Correct answer: A general way of grouping together a number of values with a variety of types into one compound type.
Incorrect answer: A general way of grouping together a number of values with the same type into one compound type.
Incorrect answer: A way of grouping together a number of values with a variety of types into one compound type that can grow or shrink in size.
Incorrect answer: A way of grouping together a number of values with the same type into one compound type that can grow or shrink in size.

Idea: Every value in Rust is of a certain data type, which tells Rust what kind of data is being specified so it knows how to work with that data.
Question: What does a data type do?
Correct answer: Tell Rust what kind of data is being specified so it knows how to work with that data.
Incorrect answer: Tell Rust what kind of data is returned so it knows how to work with that data.
Incorrect answer: Tell Rust what kind of data is being specified so it knows how to work with that data and if it's valid data.
Incorrect answer: Store data that can be used by Rust.

Idea: If you're unsure which integer type to use, Rust's defaults are generally good places to start: integer types default to i32.
Question: What's a good default integer type to use if you're unsure?
Correct answer: i32
Incorrect answer: u32
Incorrect answer: isize
Incorrect answer: usize

Idea: An array is a single chunk of memory of a known, fixed size that can be allocated on the stack.
Question: What is an array?