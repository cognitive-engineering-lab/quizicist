Inheritance defines a relationship between objects that share characteristics. Specifi cally it is the mechanism whereby a new class, called a subclass, is created from an exist ing class, called a superclass, by absorbing its state and behavior and augmenting these with features unique to the new class. We say that the subclass inherits characteristics of its superclass.
Don’t get confused by the names: a subclass is bigger than a superclass—it contains more data and more methods!
Inheritance provides an effective mechanism for code reuse. Suppose the code for a superclass has been tested and debugged. Since a subclass object shares features of a superclass object, the only new code required is for the additional characteristics of the subclass.
A subclass can itself be a superclass for another subclass, leading to an inheritance hierarchy of classes.
For example, consider the relationship between these objects: Person, Employee, Student, GradStudent, and UnderGrad.

For any of these classes, an arrow points to its superclass. The arrow designates an inheritance relationship between classes, or, informally, an is-a relationship. Thus, an Employee is-a Person; a Student is-a Person; a GradStudent is-a Student; an UnderGrad is-a Student. Notice that the opposite is not necessarily true: A Person may not be a Student, nor is a Student necessarily an UnderGrad.
Note that the is-a relationship is transitive: If a GradStudent is-a Student and a Student is-a Person, then a GradStudent is-a Person.
Every subclass inherits the public or protected variables and methods of its super class (see p. 135). Subclasses may have additional methods and instance variables that are not in the superclass. A subclass may redefine a method it inherits. For example, GradStudent and UnderGrad may use different algorithms for computing the course grade, and need to change a computeGrade method inherited from Student. This is called method overriding. If part of the original method implementation from the su perclass is retained, we refer to the rewrite as partial overriding (see p. 135).
