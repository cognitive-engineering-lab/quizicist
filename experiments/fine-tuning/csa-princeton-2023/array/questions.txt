question-section:0
2 1
Consider the following code segment:
final int[] a1 = {1, 2};
int[] b1 = {3, 4};
a1 = b1;
System.out.print(a1[1]);

What is printed as a result of executing the code segment?
(A) 2
(B) 3
(C) 4
(D*) Nothing is printed due to a compile-time error.
(E) Nothing is printed due to a run-time error.

question-section:0
2 1
Consider the following code segment:
int [] a = {1, 2, 3};
int [] b = {4, 5, 6};
a = b;
for (int i = 0; i < b.length; i++)
{
    b[i] *= 2;
}
System.out.println(a[0]);

What is printed as a result of executing the code segment?
(A) 1
(B) 4
(C*) 8
(D) Nothing is printed due to a compile-time error.
(E) Nothing is printed due to a run-time error.

question-section:0
4 2
Consider the following incomplete method:
public static int mod3(int[] a)
{
    int count = 0;
    // code not shown
    return count;
}

Method Mod3 is intended to return the number of integers in the array that are evenly divisible by 3. Which of the following code segments could be used to replace // code not shown so that Mod3 will work as intended?
I. for (int i = 0; i < a.length; i++)
{
    if (i % 3 == 0)
    {
        count++;
    }
}
II. for (int i = 0; i < a.length; i++)
{
    if (a[i] % 3 == 0)
    {
        count++;
    }
}
III. int i = 0;
while (a[i] % 3 == 0)
{
    count++;
    i++;
}
(A) I only
(B*) II only
(C) III only
(D) I and II
(E) II and III

question-section:0
1 1
Consider the following code:
public int[] someMethod (int[] array, int value) {
    for (int i = 1, i < array.length – 1; i++)
        array[i - 1] += value;
    return array;
}

Which of the following statements is true about the method someMethod?
(A) The method will not return the first value in the array.
(B) The method will return the last value in the array.
(C) The method will cause a run-time error.
(D) The method will not increment the first element of the array by value.
(E*) The method will not increment the last element of the array by value.

question-section:0
4 1
Consider the following code:
public int[] mystery (int[] array, int num)
{
    for(int i = 1, i < array.length - 1; i++)
        array[i] = 0;
    return array[0];
}

There is an error in method mystery. Which of the following modifications is needed to correct the compiler error?
(A) Change int[] array in the method header parameter to int[] numbers.
(B) Change array.length - 1 to array.length in the loop statement.
(C) Change array[i] = 0; to array[i - 1] = 0;.
(D*) Change the return statement to return array;.
(E) None of these choices will make the method compile.

question-section:2
5 1
Which of the following statements is true regarding search algorithms?
(A) Searching for a Twix in a row of unsorted candy is most efficient using a sequential search.
(B) Searching for a Twix in a row of unsorted candy is most efficient using a binary search.
(C) Searching for a Twix in a row of sorted candy is most efficient using a sequential search.
(D) Searching for a Twix in a row of sorted candy is most efficient using a binary search.
(E*) None of these

question-section:2
3 2
Assuming target is in array a, which of the following methods will correctly return the index of target in sorted array a?
I. public int findTarget(int[] a, int target)
{
    for (int x = 0; x < a.length; x++)
        if (a[x] == target)
    return x;
}
II. public int findTarget(int[] a, int target)
{
    int k = 0;
    for (int x : a)
    {
        if (x == target)
            return k;
        k++;
    }
    return -1;
}
III. public int findTarget(int[] a, int target)
{
    int f = 0, h = a.length, g = 0;
    for (int i = 0; i < h; i++)
    {
        g = (f + h)/2;
        if (a[g] < target)
            f = g + 1;
        else if (a[g] > target)
            h = g – 1;
    }
    if (a[g] == target)
        return g;
    return -1;
}
(A) I only
(B) II only
(C) I and II only
(D*) II and III only
(E) I, II, and III

question-section:0
2 1
What is the length of the array numbers after the following code executes?
String word = "Bear";
int[] numbers = new int[word.length() - 1];

(A) 1
(B*) 3
(C) 4
(D) 6
(E) The array will not be created due to a compile-time error.

question-section:0
2 1
Consider the following code segment:
String[] s = new String[2];
String[] t = {"Michael", "Megan", "Chelsea"};
s = t;
System.out.print(s.length);

What is printed as a result of executing the code segment?
(A) 1
(B) 2
(C*) 3
(D) Nothing will be printed due to a compile-time error.
(E) Nothing will be printed due to a run-time error.

question-section:0
2 1
Consider the following code segment:
final int[] a1 = {1, 2};
int[] b1 = {3, 4};
a1 = b1;
System.out.print(a1[1]);

What is printed as a result of executing the code segment?
(A) 2
(B) 3
(C) 4
(D*) Nothing will be printed due to a compile-time error.
(E) Nothing will be printed due to a run-time error.

question-section:0
2 1
Consider the following code segment:
final int[] myArray = {1, 2};
myArray[1] = 3;
System.out.print(myArray[1]);

What is printed as a result of executing the code segment?
(A) 1
(B) 2
(C*) 3
(D) Nothing will be printed due to a run-time error.
(E) Nothing will be printed due to a compile-time error.

question-section:2
4 2
Consider the following incomplete method:
public static int mod3(int[] numbers)
{
    int count = 0;
    for (int i = 0; i < numbers.length; i++)  {
        /* mystery code */
    }
    return count;
}

Method mod3 is intended to return the number of integers in the array numbers that are evenly divisible by 3. Which of the following code segments could be used to replace / * mystery code * / so that mod3 will work as intended?
I. if (i % 3 == 0)
{
    count++;
}
II. if (numbers[i] % 3 == 0)
{
    count++;
}
III. while (numbers[i] % 3 == 0)
{
    count++;
}
(A) I only
(B*) II only
(C) III only
(D) I and II
(E) II and III

question-section:3
4 1
Assume that an array arr of integer values has been declared and initialized with random numbers.
Which of the following code segments correctly swaps the values stored in arr[0] and arr[3]?
(A) arr[0] = 3;
arr[3] = 0;
(B) arr[0] = arr[3];
arr[3] = arr[0];
(C*) int k = arr[3];
arr[3] = arr[0];
arr[0] = k;
(D) int k = arr[3];
arr[0] = arr[3];
arr[3] = k;
(E) int k = arr[0];
arr[3] = arr[0];
arr[0] = k;

question-section:2
2 1
Consider the following code segment:
int [] scores = {75, 63, 52, 80};
for (int s : scores)
{
    if (s < 75)
    {
        s += 5;
    }
}
for (int s : scores)
{
    System.out.print(s + " ");
}

What is printed as a result of executing the code segment?
(A*) 75 63 52 80
(B) 75 68 57 80
(C) 80 68 57 80
(D) 80 68 57 85
(E) Nothing will be printed due to a compile-time error.

question-section:0
2 1
Consider the following code segment:
String [] names = {"Abi", "Brianna", "Jada", "Kiara", "Tiffany", "Vanessa"};
int middle = names.length/2 - 1;
for (int x = 0; x < middle; x++)
{
    String hold = names[x];
    names[x] = names [names.length - x - 1];
    names[names.length - x - 1] = hold;
}
for (String n: names)
{
    System.out.print(n + " ");
}
What is printed as a result of executing the code segment?
(A) Abi Brianna Jada Kiara Tiffany Vanessa
(B) Abi Jada Brianna Vanessa Kiara Tiffany
(C) Vanessa Tiffany Kiara Jada Brianna Abi
(D*) Vanessa Tiffany Jada Kiara Brianna Abi
(E) Vanessa Brianna Jada Kiara Tiffany Abi
