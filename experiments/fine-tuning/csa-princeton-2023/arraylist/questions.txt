question-section:0
2 1
Consider the following code segment:
ArrayList list = new ArrayList( );
list.add("A");
list.add("B");
list.add(0, "C");
list.add("D");
list.set(2, "E");
list.remove(1);
System.out.println(list);

What is printed as a result of executing the code segment?
(A) [A, B, C, D, E]
(B) [A, B, D, E]
(C*) [C, E, D]
(D) [A, D, E]
(E) [A, C, D, E]

question-section:0
2 1
Consider the following data fields and method:
private ArrayList letters;
// precondition: letters.size( ) > 0
// letters contains String objects
public void letterRemover( )
{
    int i = 0;
    while (i < letters.size( ))
    {
        if (letters.get(i).equals("A"))
            letters.remove(i);
        i++;
    }
}

Assume that ArrayList letters originally contains the following String values:
[A, B, A, A, C, D, B]

What will letters contain as a result of executing letterRemover( )?
(A) [A, B, A, A, C, D, B]
(B) [B, C, D, B]
(C*) [B, A, C, D, B]
(D) [A, B, A, C, D, B]
(E) [A, A, B, C, D, B, D]

question-section:0
2 1
Consider the following method:
private ArrayList myList;
// precondition: myList.size( ) > 0
// myList contains String objects
public void myMethod( )
{
    for (int i = 0; i < myList.size( ) â€“ 1; i++)  {
        myList.remove(i);
        System.out.print(myList.get(i) + " ");
    }
}

Assume that myList originally contains the following String values: [A, B, C, D, E]
What will be printed when the method above executes?
(A) A B C D E
(B) A C E
(C) B D E
(D*) B D
(E) Nothing will be printed due to an IndexOutOfBoundsException.

question-section:0
2 1
Consider the following code segment:
ArrayList list = new ArrayList( );
for (int i = 1; i <= 8; i++)
{
    list.add(new Integer(i));
}
for (int j = 1; j < list.size( ); j++)
{
    list.set(j / 2, list.get(j));
}
System.out.println(list);

What is printed as a result of executing the code segment?
(A*) [2, 4, 6, 8, 5, 6, 7, 8]
(B) [1, 2, 3, 4, 5, 6, 7, 8]
(C) [1, 2, 3, 4]
(D) [1, 2, 3, 4, 1, 2, 3, 4]
(E) [2, 2, 4, 4, 6, 6, 8, 8]