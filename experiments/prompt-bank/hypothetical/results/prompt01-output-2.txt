Question: What does this code do?
                Code: pub fn notify<T: Summary>(item: T) {
    println!("Breaking news! {}", item.summarize());
}
                Correct: Create a function that calls summarize on any type that implements Summary
                Incorrect: Define a trait named Notify
                Incorrect: Create a function that calls summarize on the type specified by the user
                Incorrect: Create a function that prints Breaking news!

Question: What is this code doing?
                Code: pub fn returns_summarize<T: Summary>(item: T) -> String {
    item.summarize()
}
                Correct: Create a function that returns a String generated by summarize on any type that implements Summary
                Incorrect: Define a trait named ReturnsSummarize
                Incorrect: Create a function that takes a type as a parameter and calls summarize on that type
                Incorrect: Create a function that returns a String generated by summarize on the type specified by the user

Question: What is this code doing?
                Code: pub trait Summary {
    fn summarize(&self) -> String {
        String::from("(Read more...)")
    }
}
                Correct: Define a trait with a default implementation of the summarize method
                Incorrect: Define a trait named Summary
                Incorrect: Create a function that calls summarize on any type that implements Summary
                Incorrect: Create a function that returns a String generated by summarize on the type specified by the user

Question: What type of syntax is used to constrain the generic type T?
                Code: fn my_function<T>(t: &T) -> T where T: Display + Clone, { t.clone() }
                Correct: Trait bound
                Incorrect: Impl Trait
                Incorrect: Where clause
                Incorrect: Generic type

Question: What type of syntax is used for the return type of this function?
                Code: fn returns_summarizable(switch: bool) -> impl Summary { if switch { NewsArticle { headline: String::from("Penguins win the Stanley Cup Championship!"), location: String::from("Pittsburgh, PA, USA"), author: String::from("Iceburgh"), content: String::from("The Pittsburgh Penguins once again are the best hockey team in the NHL."), } } else { Tweet { username: String::from("horse_ebooks"), content: String::from("of course, as you probably already know, people"), reply: false, retweet: false, } } }
                Correct: Impl Trait
                Incorrect: Trait bound
                Incorrect: Where clause
                Incorrect: Generic type

